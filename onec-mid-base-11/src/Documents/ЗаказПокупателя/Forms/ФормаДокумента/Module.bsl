
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Группа = Элементы.Добавить("ГруппаДобРеквизиты", Тип("ГруппаФормы"), ЭтотОбъект);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок = "Добавленные реквизиты:";	
	
	ТипРеквизита = Новый ОписаниеТипов("СправочникСсылка.ТП_КонтактныеЛица");
	ТипРеквизита1 = Новый ОписаниеТипов("Число");

	ДобавляемыеРеквизиты = Новый Массив;
	РеквизитКонтактноеЛицо = Новый РеквизитФормы("РеквизитКонтактноеЛицо", ТипРеквизита, "", "Контактное лицо");
	РеквизитСогласованнаяСкидка = Новый РеквизитФормы("РеквизитСогласованнаяСкидка", ТипРеквизита1, "",
	 "Согласованная скидка");
	 
	КомандаПересчитать = Команды.Добавить("ПересчитатьСуммуСУчетомСкидки");
	КомандаПересчитать.Заголовок = "Пересчитать сумму с учетом скидки";
	КомандаПересчитать.Действие = "ПересчитатьСуммуСУчетомСкидки";	 	

	ДобавляемыеРеквизиты.Добавить(РеквизитКонтактноеЛицо);
	ДобавляемыеРеквизиты.Добавить(РеквизитСогласованнаяСкидка);	

	ИзменитьРеквизиты(ДобавляемыеРеквизиты);

	Если Элементы.Найти("КонтактноеЛицо") = Неопределено Тогда
		ПолеВвода  = Элементы.Добавить("КонтактноеЛицо", Тип("ПолеФормы"), Группа);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.ТП_КонтактноеЛицо";
	КонецЕсли;
		
	Если Элементы.Найти("СогласованнаяСкидка") = Неопределено Тогда
		ПолеВвода = Элементы.Добавить("СогласованнаяСкидка", Тип("ПолеФормы"), Группа);
		ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
		ПолеВвода.ПутьКДанным = "Объект.ТП_СогласованнаяСкидка";
		ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииСогласованнаяСкидка");
	КонецЕсли;
			
	КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьСуммуСУчетомСкидки", Тип("КнопкаФормы"),Группа);
	КнопкаФормы.ИмяКоманды = "ПересчитатьСуммуСУчетомСкидки";
	КнопкаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КнопкаФормы.Картинка = БиблиотекаКартинок.ВыбратьЗначение;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	ОбщаяСумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	ТекущиеДанные.Сумма = ОбщаяСумма - 
	(ОбщаяСумма / 100 * Объект.ТП_СогласованнаяСкидка);
	
	РассчитатьСуммуДокумента();	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Асинх Процедура ПриИзмененииСогласованнаяСкидка()
	Если Не ЗначениеЗаполнено(Объект.Товары) И Не ЗначениеЗаполнено(Объект.Услуги) Тогда
		Возврат
	Иначе
		Ответ = Ждать ВопросАсинх("Скидка изменена, пересчитать сумму?", РежимДиалогаВопрос.ДаНет,,,,);
	КонецЕсли;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		РассчитатьСуммуТоваров();
		РассчитатьСуммуУслуг();
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;	
	
 	ТекущиеДанные.Скидка = Объект.ТП_СогласованнаяСкидка;	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуТоваров()
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуУслуг()
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка)
	КонецЦикла;
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуСУчетомСкидки(Команда)
	РассчитатьСуммуТоваров();
	РассчитатьСуммуУслуг();
КонецПроцедуры

#КонецОбласти

#КонецОбласти